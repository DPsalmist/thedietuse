# Generated by Django 3.2.6 on 2022-08-27 05:47

import ckeditor.fields
import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('account_type', models.CharField(choices=[('select account', 'select account'), ('teacher', 'teacher'), ('management', 'management'), ('board member', 'board member')], default='select account', max_length=200)),
                ('email', models.CharField(blank=True, max_length=200, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=200)),
                ('last_name', models.CharField(blank=True, max_length=200)),
                ('username', models.CharField(blank=True, max_length=200, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StaffAppraisal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_gender', models.CharField(choices=[('Select Gender', 'Select Gender'), ('M', 'Male'), ('F', 'Female')], default='Select Gender', max_length=100)),
                ('staff_rating', models.CharField(blank=True, default=50, max_length=50)),
                ('created_at', models.DateTimeField(default=datetime.datetime(2022, 8, 27, 6, 47, 3, 315875))),
                ('staff_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_appraisals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['staff_rating'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralAppraisal',
            fields=[
                ('staffappraisal_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='home.staffappraisal')),
                ('week', models.CharField(choices=[('1', 'Week 1'), ('2', 'Week 2'), ('3', 'Week 3'), ('4', 'Week 4'), ('5', 'Week 5'), ('6', 'Week 6'), ('7', 'Week 7'), ('8', 'Week 8'), ('9', 'Week 9'), ('10', 'Week 10'), ('11', 'Week 11'), ('12', 'Week 12'), ('13', 'Week 13'), ('14', 'Week 14'), ('15', 'Week 15')], default='Week 1', max_length=20)),
                ('term', models.CharField(choices=[('First Term', 'First Term'), ('Second Term', 'Second Term'), ('Third Term', 'Third Term')], default='First Term', max_length=20)),
                ('year', models.CharField(choices=[('2022', '2022'), ('2023', '2023'), ('2024', '2024'), ('2025', '2025'), ('2026', '2026'), ('2027', '2027'), ('2028', '2028'), ('2029', '2029'), ('2030', '2030'), ('2031', '2031'), ('2032', '2032'), ('2033', '2033'), ('2034', '2034'), ('2035', '2035'), ('2036', '2036'), ('2037', '2037'), ('2038', '2038'), ('2039', '2039'), ('2040', '2040'), ('2041', '2041')], default='2022', max_length=20)),
                ('punctuality_to_school', models.IntegerField(blank=True)),
                ('punctuality_to_class', models.IntegerField(blank=True)),
                ('neatness_and_appearance', models.IntegerField(blank=True)),
                ('respect_for_constituted_authority', models.IntegerField(blank=True)),
                ('adherence_to_code_of_conduct', models.IntegerField(blank=True)),
                ('initiative', models.IntegerField(blank=True)),
                ('sense_of_responsibility', models.IntegerField(blank=True)),
                ('courtesy_to_parents_and_supervisors', models.IntegerField(blank=True)),
                ('acceptance_to_correction', models.IntegerField(blank=True)),
                ('team_bonding_capacity', models.IntegerField(blank=True)),
                ('attendance_and_participation_in_staff_meeting', models.IntegerField(blank=True)),
                ('adherence_to_school_organogram', models.IntegerField(blank=True)),
                ('involvement_in_extra_curricular_activities', models.IntegerField(blank=True)),
                ('hod_remarks', models.CharField(blank=True, max_length=500)),
                ('avg_general_appraisal_performance', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('date_created', models.DateTimeField(default=datetime.datetime(2022, 8, 27, 6, 47, 3, 315875))),
            ],
            bases=('home.staffappraisal',),
        ),
        migrations.CreateModel(
            name='JobAppraisal',
            fields=[
                ('staffappraisal_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='home.staffappraisal')),
                ('week', models.CharField(choices=[('1', 'Week 1'), ('2', 'Week 2'), ('3', 'Week 3'), ('4', 'Week 4'), ('5', 'Week 5'), ('6', 'Week 6'), ('7', 'Week 7'), ('8', 'Week 8'), ('9', 'Week 9'), ('10', 'Week 10'), ('11', 'Week 11'), ('12', 'Week 12'), ('13', 'Week 13'), ('14', 'Week 14'), ('15', 'Week 15')], default='Week 1', max_length=20)),
                ('term', models.CharField(choices=[('First Term', 'First Term'), ('Second Term', 'Second Term'), ('Third Term', 'Third Term')], default='First Term', max_length=20)),
                ('year', models.CharField(choices=[('2022', '2022'), ('2023', '2023'), ('2024', '2024'), ('2025', '2025'), ('2026', '2026'), ('2027', '2027'), ('2028', '2028'), ('2029', '2029'), ('2030', '2030'), ('2031', '2031'), ('2032', '2032'), ('2033', '2033'), ('2034', '2034'), ('2035', '2035'), ('2036', '2036'), ('2037', '2037'), ('2038', '2038'), ('2039', '2039'), ('2040', '2040'), ('2041', '2041')], default='2022', max_length=20)),
                ('up_to_date_lesson_notes', models.IntegerField(blank=True)),
                ('class_management_skills', models.IntegerField(blank=True)),
                ('neatness_and_appearance', models.IntegerField(blank=True)),
                ('classroom_communication', models.IntegerField(blank=True)),
                ('time_management', models.IntegerField(blank=True)),
                ('syllabus_compliance', models.IntegerField(blank=True)),
                ('teaching_competence', models.IntegerField(blank=True)),
                ('students_performance_in_subjects_taught', models.IntegerField(blank=True)),
                ('parents_relationship', models.IntegerField(blank=True)),
                ('students_relationship', models.IntegerField(blank=True)),
                ('colleagues_relationship', models.IntegerField(blank=True)),
                ('resource_management', models.IntegerField(blank=True)),
                ('knowledge_of_subjects_taught', models.IntegerField(blank=True)),
                ('comments_by_parents', models.IntegerField(blank=True)),
                ('comments_by_students', models.IntegerField(blank=True)),
                ('comments_by_colleagues', models.IntegerField(blank=True)),
                ('hod_remarks', models.CharField(blank=True, max_length=500)),
                ('avg_job_appraisal_performance', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('appraisal_date', models.DateTimeField(default=datetime.datetime(2022, 8, 27, 6, 47, 3, 315875))),
            ],
            bases=('home.staffappraisal',),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('summary', models.CharField(max_length=250)),
                ('report_class', models.CharField(blank=True, max_length=60)),
                ('body', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('unapproved', 'unapproved')], default='pending', max_length=60)),
                ('recommendation', models.CharField(max_length=500)),
                ('date_created', models.DateTimeField(default=datetime.datetime(2022, 8, 27, 6, 47, 3, 315875))),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='writers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('description', models.CharField(max_length=250)),
                ('objective', models.CharField(max_length=500)),
                ('project_class', models.CharField(blank=True, max_length=60)),
                ('requirements', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('unapproved', 'unapproved'), ('completed', 'completed'), ('delayed', 'delayed')], default='pending', max_length=60)),
                ('budget', models.FloatField()),
                ('date_created', models.DateTimeField(default=datetime.datetime(2022, 8, 27, 6, 47, 3, 318675))),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('completion', models.CharField(blank=True, max_length=20)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_created',),
            },
        ),
    ]
